services:
  # Uncomment the service(s) you want to build locally for development.
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    image: luminainc/server:dev
    platform: linux/arm64
  task:
    build:
      context: .
      dockerfile: docker/task/Dockerfile
    image: luminainc/task:dev
    platform: linux/arm64
    environment:
      - AWS__ACCESS_KEY=minioadmin
      - AWS__SECRET_KEY=minioadmin
      - AWS__ENDPOINT=http://minio:9000
      - AWS__REGION=us-east-1
      - WORKER__S3_BUCKET=chunkr
      - WORKER__SERVER_URL=http://server:8000
      - WORKER__SEGMENTATION_URL=http://segmentation:8000
      - WORKER__GENERAL_OCR_URL=http://ocr-backend:8000
      - PG__URL=postgresql://postgres:postgres@postgres:5432/chunkr
      - REDIS__URL=redis://redis:6379
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    image: luminainc/web:dev
    platform: linux/arm64
  segmentation-backend:
    build:
      context: .
      dockerfile: docker/segmentation/Dockerfile
    image: luminainc/segmentation-yolo-cpu:dev
    deploy:
      replicas: 1
    platform: linux/arm64
  #   image: luminainc/segmentation-yolo-cpu:dev
  #   platform: linux/amd64
  ocr-backend:
    build:
      context: .
      dockerfile: docker/doctr/Dockerfile
    image: luminainc/doctr-small:dev
    platform: linux/arm64
  ocr:
    build:
      context: .
      dockerfile: docker/ocr/Dockerfile
    image: luminainc/ocr:dev
    platform: linux/arm64
  segmentation:
    build:
      context: .
      dockerfile: docker/segmentation/Dockerfile
    image: luminainc/segmentation:dev
    platform: linux/arm64
  redis:
    platform: linux/arm64
  keycloak:
    platform: linux/arm64
  postgres:
    platform: linux/arm64
  minio:
    platform: linux/arm64 